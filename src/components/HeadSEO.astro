---
import type { CollectionEntry } from 'astro:content';
import { SITE, OPEN_GRAPH } from '../consts';

type Props = {
  canonicalUrl: URL;
  title?: string;
  publishDate?: Date;
  author?: string;
} & CollectionEntry<'docs'>['data'];

const { ogLocale, image, description, canonicalUrl, title, publishDate, author = "Kontroler Team" } = Astro.props;
const formattedContentTitle = title ? `${title} | ${SITE.title}` : `${SITE.title} - Kubernetes Workflow Engine`;
const imageSrc = image?.src ?? OPEN_GRAPH.image.src;
const canonicalImageSrc = new URL(imageSrc, Astro.site);
const imageAlt = image?.alt ?? OPEN_GRAPH.image.alt;
---

<!-- Essential Meta Tags -->
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<meta name="robots" content="index, follow, max-image-preview:large">
<link rel="canonical" href={canonicalUrl} />

<!-- Primary Meta Tags -->
<title>{formattedContentTitle}</title>
<meta name="title" content={formattedContentTitle}>
<meta name="description" content={description ?? SITE.description} />
<meta name="keywords" content="kubernetes, workflow engine, kontroler, container orchestration, cloud native, k8s, dag, workflow automation, ci/cd, continuous integration, continuous deployment" />
<meta name="author" content={author} />
{publishDate && <meta name="date" content={publishDate.toISOString()} />}

<!-- OpenGraph Tags -->
<meta property="og:title" content={formattedContentTitle} />
<meta property="og:type" content="article" />
<meta property="og:url" content={canonicalUrl} />
<meta property="og:locale" content={ogLocale ?? SITE.defaultLanguage} />
<meta property="og:image" content={canonicalImageSrc} />
<meta property="og:image:alt" content={imageAlt} />
<meta property="og:image:width" content="1200" />
<meta property="og:image:height" content="630" />
<meta name="description" property="og:description" content={description ?? SITE.description} />
<meta property="og:site_name" content={SITE.title} />
{publishDate && <meta property="article:published_time" content={publishDate.toISOString()} />}
<meta property="article:author" content={author} />

<!-- Schema.org JSON-LD -->
<script type="application/ld+json" set:html={JSON.stringify({
  "@context": "https://schema.org",
  "@type": "TechArticle",
  "headline": title,
  "image": canonicalImageSrc,
  "author": {
    "@type": "Person",
    "name": author
  },
  "publisher": {
    "@type": "Organization",
    "name": SITE.title,
    "logo": {
      "@type": "ImageObject",
      "url": `${Astro.site}favicon.svg`
    }
  },
  "datePublished": publishDate?.toISOString(),
  "description": description ?? SITE.description,
  "applicationCategory": "DeveloperApplication",
  "operatingSystem": "Kubernetes",
  "url": canonicalUrl,
  "keywords": [
    "Kubernetes",
    "Workflow Engine",
    "Kontroler",
    "Container Orchestration",
    "Cloud Native",
    "K8s",
    "DAG",
    "Workflow Automation",
    "CI/CD"
  ]
})} />